// <auto-generated />
using System;
using InvestmentPerformance.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvestmentPerformance.Data.Migrations
{
    [DbContext(typeof(InvestmentDbContext))]
    [Migration("20200520013140_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvestmentPerformance.Data.Models.Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBuy")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Shares")
                        .HasColumnType("real");

                    b.Property<Guid>("StockId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.HasIndex("UserId");

                    b.ToTable("Investments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("47ec638f-c192-4ba0-a09e-db698f10e84d"),
                            EventTime = new DateTime(2020, 5, 19, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5062),
                            IsBuy = true,
                            Price = 313.14m,
                            Shares = 200f,
                            StockId = new Guid("d6459cc0-ab3d-45c2-93a1-6c8e650f0712"),
                            UserId = new Guid("bb4c57b9-02d0-495a-8eaf-68973ef59894")
                        },
                        new
                        {
                            Id = new Guid("1c92a666-7942-4d4f-8dc0-81451f17b398"),
                            EventTime = new DateTime(2020, 5, 20, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5705),
                            IsBuy = false,
                            Price = 400.20m,
                            Shares = 100f,
                            StockId = new Guid("d6459cc0-ab3d-45c2-93a1-6c8e650f0712"),
                            UserId = new Guid("bb4c57b9-02d0-495a-8eaf-68973ef59894")
                        },
                        new
                        {
                            Id = new Guid("fa8f2ff7-e532-4400-97ae-b93c2d8aac4e"),
                            EventTime = new DateTime(2020, 5, 20, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5739),
                            IsBuy = true,
                            Price = 183.63m,
                            Shares = 400f,
                            StockId = new Guid("0a1973dc-8716-4d6c-990a-ee85dcfdf446"),
                            UserId = new Guid("bb4c57b9-02d0-495a-8eaf-68973ef59894")
                        },
                        new
                        {
                            Id = new Guid("16f45036-939b-45d3-ac5e-7707a6e70898"),
                            EventTime = new DateTime(2020, 5, 19, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5757),
                            IsBuy = true,
                            Price = 313.14m,
                            Shares = 200f,
                            StockId = new Guid("d6459cc0-ab3d-45c2-93a1-6c8e650f0712"),
                            UserId = new Guid("858f4475-3628-4557-91f2-dd64e54f02cb")
                        },
                        new
                        {
                            Id = new Guid("4fb14db1-7ec7-4363-ade8-b16c9392279d"),
                            EventTime = new DateTime(2020, 5, 20, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5779),
                            IsBuy = true,
                            Price = 400.20m,
                            Shares = 100f,
                            StockId = new Guid("d6459cc0-ab3d-45c2-93a1-6c8e650f0712"),
                            UserId = new Guid("858f4475-3628-4557-91f2-dd64e54f02cb")
                        },
                        new
                        {
                            Id = new Guid("b096bf84-b30c-4c7d-b3c6-ba3cb575f8aa"),
                            EventTime = new DateTime(2020, 5, 20, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5798),
                            IsBuy = true,
                            Price = 183.63m,
                            Shares = 400f,
                            StockId = new Guid("0a1973dc-8716-4d6c-990a-ee85dcfdf446"),
                            UserId = new Guid("858f4475-3628-4557-91f2-dd64e54f02cb")
                        },
                        new
                        {
                            Id = new Guid("7a4ee2c2-8982-4cce-bd93-84d6db110714"),
                            EventTime = new DateTime(2020, 5, 20, 1, 31, 40, 651, DateTimeKind.Utc).AddTicks(5815),
                            IsBuy = true,
                            Price = 1374.40m,
                            Shares = 0.4f,
                            StockId = new Guid("d0cc01ae-4d7e-4ea7-b539-5309651dee77"),
                            UserId = new Guid("ee7f4e2a-9212-4d19-99b0-073577fb6749")
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Data.Models.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TickerSymbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6459cc0-ab3d-45c2-93a1-6c8e650f0712"),
                            CurrentPrice = 420.69m,
                            TickerSymbol = "AAPL"
                        },
                        new
                        {
                            Id = new Guid("d0cc01ae-4d7e-4ea7-b539-5309651dee77"),
                            CurrentPrice = 1010.49m,
                            TickerSymbol = "GOOGL"
                        },
                        new
                        {
                            Id = new Guid("0a1973dc-8716-4d6c-990a-ee85dcfdf446"),
                            CurrentPrice = 200.20m,
                            TickerSymbol = "MSFT"
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bb4c57b9-02d0-495a-8eaf-68973ef59894"),
                            UserName = "Jordan_Belfort"
                        },
                        new
                        {
                            Id = new Guid("858f4475-3628-4557-91f2-dd64e54f02cb"),
                            UserName = "Warren_Buffet"
                        },
                        new
                        {
                            Id = new Guid("ee7f4e2a-9212-4d19-99b0-073577fb6749"),
                            UserName = "Joel_Gramling"
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Data.Models.Investment", b =>
                {
                    b.HasOne("InvestmentPerformance.Data.Models.Stock", "Stock")
                        .WithMany("Investments")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentPerformance.Data.Models.User", "User")
                        .WithMany("Investments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
