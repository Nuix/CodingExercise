// <auto-generated />
using System;
using InvestmentPerformance.Web.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvestmentPerformance.Web.Migrations
{
    [DbContext(typeof(InvestmentPerformanceDbContext))]
    [Migration("20210927071359_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("InvestmentPerformance.Web.Models.Entities.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestmentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastUpdateDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.ToTable("Investment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 467, DateTimeKind.Unspecified).AddTicks(8970), new TimeSpan(0, 0, 0, 0, 0)),
                            InvestmentType = "Stock",
                            LastUpdateDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 467, DateTimeKind.Unspecified).AddTicks(9020), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "AAPL"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 468, DateTimeKind.Unspecified).AddTicks(870), new TimeSpan(0, 0, 0, 0, 0)),
                            InvestmentType = "Stock",
                            LastUpdateDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 468, DateTimeKind.Unspecified).AddTicks(920), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "MSFT"
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Web.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastUpdateDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 467, DateTimeKind.Unspecified).AddTicks(5970), new TimeSpan(0, 0, 0, 0, 0)),
                            LastUpdateDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 467, DateTimeKind.Unspecified).AddTicks(6140), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Ari"
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Web.Models.Entities.UserInvestments", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset>("AcquireDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostBasis")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreatedDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentValue")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gain")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InvestmentStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("InvestmentTerm")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("LastUpdateDateUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastUpdatedBy")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("SellDateUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "InvestmentId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("InvestmentId");

                    b.ToTable("UserInvestments");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            InvestmentId = 1,
                            AcquireDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 470, DateTimeKind.Unspecified).AddTicks(7950), new TimeSpan(0, 0, 0, 0, 0)),
                            CostBasis = 20m,
                            CreatedDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 470, DateTimeKind.Unspecified).AddTicks(8220), new TimeSpan(0, 0, 0, 0, 0)),
                            CurrentPrice = 0m,
                            CurrentValue = 0m,
                            Gain = 0m,
                            Id = 1,
                            InvestmentStatus = "Active",
                            InvestmentTerm = "ShortTerm",
                            LastUpdateDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 470, DateTimeKind.Unspecified).AddTicks(8230), new TimeSpan(0, 0, 0, 0, 0)),
                            Quantity = 2m,
                            SellDateUtc = new DateTimeOffset(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0))
                        },
                        new
                        {
                            UserId = 1,
                            InvestmentId = 2,
                            AcquireDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 472, DateTimeKind.Unspecified).AddTicks(1460), new TimeSpan(0, 0, 0, 0, 0)),
                            CostBasis = 20m,
                            CreatedDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 471, DateTimeKind.Unspecified).AddTicks(6470), new TimeSpan(0, 0, 0, 0, 0)),
                            CurrentPrice = 30m,
                            CurrentValue = 60m,
                            Gain = 20m,
                            Id = 2,
                            InvestmentStatus = "Inactive",
                            InvestmentTerm = "ShortTerm",
                            LastUpdateDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 471, DateTimeKind.Unspecified).AddTicks(6470), new TimeSpan(0, 0, 0, 0, 0)),
                            Quantity = 2m,
                            SellDateUtc = new DateTimeOffset(new DateTime(2021, 9, 27, 7, 13, 58, 472, DateTimeKind.Unspecified).AddTicks(2790), new TimeSpan(0, 0, 0, 0, 0))
                        });
                });

            modelBuilder.Entity("InvestmentPerformance.Web.Models.Entities.UserInvestments", b =>
                {
                    b.HasOne("InvestmentPerformance.Web.Models.Entities.Investment", "Investment")
                        .WithMany("Users")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InvestmentPerformance.Web.Models.Entities.User", "User")
                        .WithMany("Investments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InvestmentPerformance.Web.Models.Entities.Investment", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("InvestmentPerformance.Web.Models.Entities.User", b =>
                {
                    b.Navigation("Investments");
                });
#pragma warning restore 612, 618
        }
    }
}
